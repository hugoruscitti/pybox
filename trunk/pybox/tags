!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
Box	box.py	/^class Box:$/;"	c
Box1	line.py	/^class Box1(goocanvas.Rect):$/;"	c
Canvas	canvas.py	/^class Canvas(goocanvas.Canvas):$/;"	c
Line	line.py	/^class Line(goocanvas.Polyline):$/;"	c
Main	main.py	/^class Main(Window):$/;"	c
Model	model.py	/^class Model:$/;"	c
Popup	popup.py	/^class Popup(Window):$/;"	c
View	window.py	/^class View:$/;"	c
Window	window.py	/^class Window:$/;"	c
__init__	box.py	/^    def __init__(self, x, y, model, root):$/;"	m	class:Box
__init__	canvas.py	/^    def __init__(self, main):$/;"	m	class:Canvas
__init__	line.py	/^    def __init__(self, child_box, parent_box, root):$/;"	m	class:Line
__init__	line.py	/^    def __init__(self, x, y):$/;"	m	class:Box1
__init__	main.py	/^    def __init__(self):$/;"	m	class:Main
__init__	model.py	/^    def __init__(self, name="", superclass="", abstract=False, comment="",$/;"	m	class:Model
__init__	popup.py	/^    def __init__(self, canvas):$/;"	m	class:Popup
__init__	window.py	/^    def __init__(self, ui_file):$/;"	m	class:Window
_connect_callbacks	window.py	/^    def _connect_callbacks(self, ui):$/;"	m	class:Window
_create_view	box.py	/^    def _create_view(self, root):$/;"	m	class:Box
_create_view	window.py	/^    def _create_view(self, ui):$/;"	m	class:Window
_init_drag_feature	box.py	/^    def _init_drag_feature(self):$/;"	m	class:Box
aults_values_for_text	box.py	/^        defaults_values_for_text = {$/;"	f	function:Box._create_view
aults_values_for_text	box.py	/^        self.attributes = goocanvas.Text(**defaults_values_for_text)$/;"	f	function:Box._create_view
aults_values_for_text	box.py	/^        self.methods = goocanvas.Text(**defaults_values_for_text)$/;"	f	function:Box._create_view
aults_values_for_text	box.py	/^        self.title = goocanvas.Text(**defaults_values_for_text)$/;"	f	function:Box._create_view
concatenate	box.py	/^    def concatenate(self, a, b):$/;"	m	class:Box
create_box	canvas.py	/^    def create_box(self, new_model, x=None, y=None):$/;"	m	class:Canvas
create_line	canvas.py	/^    def create_line(self, child_model, parent_model):$/;"	m	class:Canvas
distance	box.py	/^def distance((x1, y1), (x2, y2)):$/;"	f
dx	box.py	/^    def dx(self, object):$/;"	m	class:Box
dy	box.py	/^    def dy(self, object):$/;"	m	class:Box
es	canvas.py	/^        for model in self.classes:$/;"	c	function:Canvas.get_model_by_name
es	canvas.py	/^        self.classes = []$/;"	c	function:Canvas.__init__
es	canvas.py	/^        self.classes.append(new_model)$/;"	c	function:Canvas.create_box
es	canvas.py	/^        self.classes.remove(self.box.model)$/;"	c	function:Canvas.remove_selected_box
es	popup.py	/^                self.canvas.classes)$/;"	c	class:Popup.on_edit__activate/view
get_box_by_name	canvas.py	/^    def get_box_by_name(self, name):$/;"	m	class:Canvas
get_connection_more_closer_to	box.py	/^    def get_connection_more_closer_to(self, other):$/;"	m	class:Box
get_connection_more_closer_to	line.py	/^    def get_connection_more_closer_to(self, other):$/;"	m	class:Box1
get_control_points	box.py	/^    def get_control_points(self):$/;"	m	class:Box
get_control_points	line.py	/^    def get_control_points(self):$/;"	m	class:Box1
get_model_by_name	canvas.py	/^    def get_model_by_name(self, name):$/;"	m	class:Canvas
on_aboutitem__activate	main.py	/^    def on_aboutitem__activate(self, item):$/;"	m	class:Main
on_add__activate	popup.py	/^    def on_add__activate(self, widget):$/;"	m	class:Popup
on_button_press_event	canvas.py	/^    def on_button_press_event(self, group, widget, event, box):$/;"	m	class:Canvas
on_button_press_event	line.py	/^def on_button_press_event(item, target, event):$/;"	f
on_button_release_event	line.py	/^def on_button_release_event(item, target, event):$/;"	f
on_drag_end	box.py	/^    def on_drag_end(self, group, item, event):$/;"	m	class:Box
on_drag_start	box.py	/^    def on_drag_start(self, group, item, event):$/;"	m	class:Box
on_edit__activate	popup.py	/^    def on_edit__activate(self, widget):$/;"	m	class:Popup
on_event	canvas.py	/^    def on_event(self, widget, event):$/;"	m	class:Canvas
on_main__destroy	main.py	/^    def on_main__destroy(self, widget):$/;"	m	class:Main
on_motion	box.py	/^    def on_motion(self, group, item, event):$/;"	m	class:Box
on_motion_notify_event	line.py	/^def on_motion_notify_event(item, target, event):$/;"	f
on_quit_item__activate	main.py	/^    def on_quit_item__activate(self, widget):$/;"	m	class:Main
on_remove__activate	popup.py	/^    def on_remove__activate(self, widget):$/;"	m	class:Popup
remove	box.py	/^    def remove(self):$/;"	m	class:Box
remove	line.py	/^    def remove(self):$/;"	m	class:Line
remove_selected_box	canvas.py	/^    def remove_selected_box(self):$/;"	m	class:Canvas
show	model.py	/^    def show(self):$/;"	m	class:Model
show	popup.py	/^    def show(self, event, new):$/;"	m	class:Popup
update	box.py	/^    def update(self, model):$/;"	m	class:Box
update	line.py	/^    def update(self):$/;"	m	class:Line
update_lines	box.py	/^    def update_lines(self):$/;"	m	class:Box
update_positions	box.py	/^    def update_positions(self):$/;"	m	class:Box
view	popup.py	/^        new_dialog = dialogs.classview.ClassView(new_model, self.canvas.classes)$/;"	c	function:Popup.on_add__activate
view	popup.py	/^        new_dialog = dialogs.classview.ClassView(self.canvas.box.model,$/;"	c	function:Popup.on_edit__activate
